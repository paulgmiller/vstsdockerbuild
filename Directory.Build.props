<?xml version="1.0" encoding="utf-8"?>
<!--
  This root MSBuild file should be imported by all projects in the tree and serves as the central entry point for CBT.
  You can have a  hierarchy of imports but make sure that this file is still imported.
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Label="Global locations">
    <!--
      $(MSBuildAllProjects) is a list of files that determine if a project is up-to-date or not.  By including this
      file in the list, it ensures that all projects will be rebuilt if it changes.
    -->
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>

    <!--
      Enlistment root is based off of wherever this file is.  Be sure not to set this property anywhere else.
    -->
    <EnlistmentRoot>$(MSBuildThisFileDirectory.TrimEnd('\\'))</EnlistmentRoot>

    <!--
      A location to restore NuGet packages to.  This normally defaults to $(SolutionDir)\packages but when building
      from the command-line, $(SolutionDir) is not always set.
      
      IMPORTANT: If you change this path, you'll also need to update the "repositoryPath" in NuGet.config because
      that is the value used by Visual Studio.
    -->

    <!--<NuGetPackagesPath Condition=" '$(NuGetPackagesPath)' == '' ">$(EnlistmentRoot)\src\packages</NuGetPackagesPath>-->

    <CBTIntermediateOutputPath Condition=" '$(CBTIntermediateOutputPath)' == '' ">$(EnlistmentRoot)\.build\obj</CBTIntermediateOutputPath>
  </PropertyGroup>

  <!--
    Importing the "global" CBT build.props is what activates CBT.Core to restore modules.  You will want to set
    properties before or after it depending on what you're injecting.  The "global" build.props will also import
    files located in the $(CBTLocalPath) folder at certain points.
  -->
  
  <Import Project="$(EnlistmentRoot)\.build\CBT\build.props" />
</Project>
